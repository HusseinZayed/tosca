// Copyright (c) 2016 IBM Corporation.
/*
 * Generate C++ source file
 */
import std::core
import std::path
import std::string
import std::listdef
import std::text
import std::mapdef
import std::text::Text4

import core::Core
import cg::cpp::cppcommon
import cg::cpp::cppenv
import systemdef

/* Generate C++ source file for module */
func CppSource(#module: Module) -> Text4_text_sort
→ text⟦#include "⟨STRING: Mangle(PathFileStem(GetModuleURL(#module)))⟩.h"

using namespace tosca;

†⟨CppClassDefs(MapValues(GetDataSortsC(GetModuleContent(#module))))⟩
†⟨CppFunctionDefs(SetContent(CppNewEnv, GetModuleContent(#module)))⟩⟧

// --------- Data sorts

/* Generate class definition and method body for data sorts */
func CppClassDefs(#datasorts: List<Core_cdecl_sort>) -> Text4_text_sort
→ TextMapFoldES<Core_cdecl_sort>((decl) -> CppClassDef(decl), #datasorts)

func CppClassDef(Core_cdecl_sort) -> Text4_text_sort

  rule CppClassDef(cdecl⟦ data ##CONSTRUCTOR ( ##cform* ) ⟧)
  → text⟦
    †⟨TextMapFoldES((cform) -> CppMethodNew(#CONSTRUCTOR, (), cform, TRUE), #cform*)⟩
    †⟨TextMapFoldES((cform) -> CppMethodAs(#CONSTRUCTOR, (), cform, TRUE), #cform*)⟩
    †⟨TextMapFoldES((cform) -> CppFormDefs(#CONSTRUCTOR, cform), #cform*)⟩⟧

  rule CppClassDef(#cdecl)
  → text⟦⟧

/* Generate class and method definitions for the given data form */
func CppFormDefs(String, Core_cform_sort) -> Text4_text_sort

  rule CppFormDefs(#sortname, cform⟦ ##CONSTRUCTOR ##csorts? ⟧)
  → text⟦
     †⟨CppFormConstructor(#sortname, (), #CONSTRUCTOR, #csorts?, TRUE)⟩
     †⟨CppFormMethodAs(#sortname, (), #CONSTRUCTOR, TRUE)⟩
     †⟨CppFormGetValue(#sortname, (), #CONSTRUCTOR, #csorts?, TRUE)⟩⟧

  rule CppFormDefs(#sortname, cform⟦ allows-variable ⟧)
  → text⟦
      †⟨CppVarConstructorVar(#sortname, (), TRUE)⟩
      †⟨CppVarMethodUse(#sortname, (), TRUE)⟩
      †⟨CppVarConstructorUse(#sortname, (), TRUE)⟩⟧

// --------- Function sorts and associated rules

/* Generate function definitions corresponding to function sorts. */
func CppFunctionDefs(#env: {String : EnvEntry}) -> Text4_text_sort
→ TextMapFoldES((key) -> CppFunctionDecl(#env, key, FALSE), MapKeys(GetFuncSorts(GetContent(#env))))
