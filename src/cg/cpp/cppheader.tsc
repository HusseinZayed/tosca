// Copyright (c) 2016 IBM Corporation.
/*
 * Generate C++ header file
 */
import std::core
import std::path
import std::string
import std::mapdef
import std::listdef
import std::text
import std::text::Text4

import core::Core
import core::utils
import cg::cpp::cppcommon
import cg::cpp::cppenv

import Systemdef

/* Generate C++ header file for module */
func CppHeader(#module: Module) -> Text4_text_sort
→ text⟦
#ifndef †⟨HeaderGuard(GetModuleURL(#module))⟩
#define †⟨HeaderGuard(GetModuleURL(#module))⟩
#include "ts.h"
#include "⟨STRING: Mangle(PathFileStem(GetModuleURL(#module)))⟩_sigs.h"

// Imports class declarations and signatures
†⟨CppIncludeSigs(GetImports(GetModuleContent(#module)))⟩

using tosca::StringTerm;
using tosca::DoubleTerm;
using tosca::MapTerm;
using tosca::Context;

// Templated method definitions
†⟨CppMethodDefs(MapValues(GetDataSortsC(GetModuleContent(#module))))⟩

// Templated function definitions
†⟨CppFunctionDefs(SetContent(CppNewEnv, GetModuleContent(#module)))⟩
#endif⟧

/* Generate C++ header guard */
func HeaderGuard(#url: String) -> Text4_text_sort
→ text⟦⟨STRING: Mangle(UpCase(PathFileStem(#url)))⟩_H_⟧

/* Generate C++ header inclusion declarations */
func CppIncludeSigs(#imports: List<Core_cqidentifier_sort>) -> Text4_text_sort
→ TextFoldES(Map((imp) -> text⟦
#include "⟨STRING: JoinQIdentifier(imp, "/", TRUE)⟩_sigs.h"⟧, #imports))

// --------- Templated method definitions

func CppMethodDefs(#datasorts: List<Core_cdecl_sort>) -> Text4_text_sort
→ TextFoldES(Map((decl) -> CppMethodDef(decl), #datasorts))

func CppMethodDef(Core_cdecl_sort) -> Text4_text_sort

  rule CppMethodDef(cdecl⟦ data ##csortvars ##CONSTRUCTOR ( ##cform* ) ⟧)
  → text⟦
    †⟨TextMapFoldES((cform) -> CppMethodNew(#CONSTRUCTOR, csortvars?⟦ ⟨csortvars: #csortvars⟩ ⟧, cform, TRUE), #cform*)⟩
    †⟨TextMapFoldES((cform) -> CppMethodAs(#CONSTRUCTOR, csortvars?⟦ ⟨csortvars: #csortvars⟩ ⟧, cform, TRUE), #cform*)⟩
    †⟨TextMapFoldES((cform) -> CppFormMethod(#CONSTRUCTOR, csortvars?⟦ ⟨csortvars: #csortvars⟩ ⟧, cform), #cform*)⟩⟧

  rule CppMethodDef(#cdecl)
  → text⟦⟧

/* Generate method defs for the given data form */
func CppFormMethod(String, List<Core_csortvars_sort>, Core_cform_sort) -> Text4_text_sort

  rule CppFormMethod(#sortname, #csortvars?, cform⟦ ##CONSTRUCTOR ##csorts? ⟧)
  → text⟦
      †⟨CppFormConstructor(#sortname, #csortvars?, #CONSTRUCTOR, #csorts?, TRUE)⟩
      †⟨CppFormMethodAs(#sortname, #csortvars?, #CONSTRUCTOR, TRUE)⟩
      †⟨CppFormGetValue(#sortname, #csortvars?, #CONSTRUCTOR, #csorts?, TRUE)⟩⟧

  rule CppFormMethod(#sortname, #csortvars?, cform⟦ allows-variable ⟧)
  → text⟦
      †⟨CppVarConstructorVar(#sortname, #csortvars?, TRUE)⟩
      †⟨CppVarMethodUse(#sortname, #csortvars?, TRUE)⟩
      †⟨CppVarConstructorUse(#sortname, #csortvars?, TRUE)⟩⟧

// --------- Templated function definitions

func CppFunctionDefs(#env: {String : EnvEntry}) -> Text4_text_sort
→ TextMapFoldES((key) ->CppFunctionDecl(#env, key, TRUE), MapKeys(GetFuncSorts(GetContent(#env))))
