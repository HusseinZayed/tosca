/*
 * Copyright (c) 2015 IBM Corporation.
 *
 * Implements equality functions for some crsx constructs
 *
 * @author : m schett
 * @date   : 08/02/2015
 */

CrsxEqus[( 

$Use["std/string.crs"];

/* ConstructorEqual 
  @param  constructor `c1` 
  @param  constructor `c2`
  @return TRUE, iff the constructor symbol `c1` is the same as the constructor symbol `c2`, 
          FALSE otherwise   
  @note   ignores qualifiers 
*/
ConstructorEqual[$String /* Core_constructor_sort */, $String /* Core_constructor_sort */] :: Boolean;
ConstructorEqual[#CONSTRUCTOR, #CONSTRUCTOR2]
→
StringEqual[#CONSTRUCTOR, #CONSTRUCTOR2];

METAVAREqual[$String /* Crsx_METAVAR_sort */, $String /* Crsx_METAVAR_sort */] :: Boolean;
METAVAREqual[#METAVAR, #METAVAR2] 
→ 
StringEqual[#METAVAR, #METAVAR2];

// TODO-2016-02-04: problem variable equal

/* VariableEqual 
  @param  cvariable `v1` 
  @param  cvariable `v2`
  @return TRUE, iff the variable `v1` is the same as the variable `v2`, 
          FALSE otherwise   
  @note   BUGGY --- ask LV plus functional marker should be optional
*/
VariableEqual[Core_cvariable_sort, Core_cvariable_sort] :: Boolean;
VariableEqual[%cvariable⟦ ##VARIABLE ⟧, %cvariable⟦ ##VARIABLE2 ⟧  ] 
→ WrapBoolean[$[SameVariable, #VARIABLE, #VARIABLE2]];
//StringEqual[#VARIABLE, #VARIABLE2];




)]
