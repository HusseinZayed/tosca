// Copyright (c) 2016 IBM Corporation.

import Std::Core
import Std::Mapdef
import Core::Core
import Systemdef

// --- Sort inference environment

/* Environment entry sort */
enum EnvEntry | EContent(LoadedContent)
              | ESystem(TSystem)
              | ETerm(Core_cterm_sort)

/* Corresponding unwrappers */
func UnContent(EnvEntry) -> LoadedContent
rule UnContent(EContent(#)) → #

func UnSystem(EnvEntry) -> TSystem
rule UnSystem(ESystem(#)) → #

func UnTerm(EnvEntry) -> Core_cterm_sort
rule UnTerm(ETerm(#)) → #

/* Initialize environment */
func EnvNew(#content:LoadedContent, #system:TSystem) -> {String:EnvEntry}
→ SetContent(MapNew<String EnvEntry>, #content)

// --- Module content

func SetContent(#env: {String : EnvEntry}, #content: LoadedContent) -> {String : EnvEntry}
→ SetValue(#env, "content", EContent(#content))

func GetContent(#env: {String : EnvEntry}) -> LoadedContent
→ UnContent(GetValue(#env, "content"))

// --- System

func SetSystem(#env: {String : EnvEntry}, #system: TSystem) -> {String : EnvEntry}
→ SetValue(#env, "system", ESystem(#system))

func GetSystem(#env: {String : EnvEntry}) -> TSystem
→ UnSystem(GetValue(#env, "system"))

// --- Contractum

func SetContractum(#env: {String : EnvEntry}, #contractum: Core_cterm_sort) -> {String : EnvEntry}
→ SetValue(#env, "contractum", ETerm(#contractum))

func GetContractum(#env: {String : EnvEntry}) -> Core_cterm_sort
→ UnTerm(GetValue(#env, "contractum"))

// --- Some generic helper functions

func GetValue(#env: {String : EnvEntry}, #key: String) -> EnvEntry
→ UnSOME<EnvEntry>(MapGet<String EnvEntry>(#env, #key))

func SetValue(#env: {String : EnvEntry}, #key: String, #value: EnvEntry) -> {String : EnvEntry}
→ MapPut<String EnvEntry>(#env, #key, #value)
