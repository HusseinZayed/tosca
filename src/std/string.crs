/* Copyright (c) 2015 IBM Corporation. */

/*
 * Standard library for string.
 */
String[(

$Use["std/core.crs"];

// --- Testing


StartsWith[$String /* string */, $String /* search string */] :: Boolean; /* extern */
-[Data[#string, #search]]: StartsWith[#string, #search] → WrapBoolean[$[StartsWith, #string, #search]];

StringEqual[$String /* string */, $String /* other string */] :: Boolean; /* extern */
-[Data[#string1, #string2]]: StringEqual[#string1, #string2] → WrapBoolean[$[StringEqual, #string1, #string2]];

// --- Mutation

ConcatString[$String, $String] :: $String;
-[Data[#string1, #string2]]: ConcatString[#string1, #string2] → $[:, #string1, #string2];

UnString[$String] :: $String; 
-[Data[#string]]: UnString[#string] → $[Rescape, #string] ;

/*
 * Make sure the given string first character is upper case
 */
UpCaseFirst[$String] :: $String;
UpCaseFirst[#string] → $[:, $[UpCase, $[Substring, #string, 0, 1]], $[Substring, #string, 1]]; 

/*
 * Returns given string without its first character
 */
RemoveFirstChar[$String] :: $String; 
-[Data[#string]]: RemoveFirstChar[#string] → $[Substring, #string, 1];


/*
 * Returns given string without its last character
 */
RemoveLastChar[$String] :: $String; 
-[Data[#string]]: RemoveLastChar[#string] → $[Substring, #string, 0, $[Minus, $[Length, #string], 1]];

Replace[$String, $String, $String] :: $String;
-[Data[#string, #old, #new]]: Replace[#string, #old, #new] → $[Replace, #string, #old, #new]; 

AfterLast[$String, $String] :: $String;

-[Data[#string, #sep]]:
AfterLast[#string, #sep]
→
$[If, $[Contains, #string, #sep], 
    AfterLast2[$[AfterFirst, #string, #sep], #sep],
    #string];

AfterLast2[$String, $String] :: $String;

// Internal helper.
-[Data[#string]]:
AfterLast2[#string, #sep] → AfterLast[#string, #sep];

BeforeLast[$String, $String] :: $String;

-[Data[#String, #Sep]]:
BeforeLast[#String, #Sep]
→
$[If, $[Contains, #String, #Sep], 
    BeforeLast2[$[BeforeFirst, #String, #Sep], #Sep, BeforeLast[$[AfterFirst, #String, #Sep], #Sep]],
    ""];


BeforeLast2[$String, $String, $String] :: $String;

-[Data[#After]]:
BeforeLast2[#Before, #Sep, #After]
→
$[If, $[StringEqual, #After, ""], 
    #Before,
    $[:, #Before, #Sep, #After]];


// --- Parsing

∀ a.ParseToString[$String, $String] :: a;

-[Data[#category, #string]]: 
ParseToString[#category, #string] → $[Show, $[ParseText, #category, #string]]; // TODO: line information.

∀ a.ParseToTerm[$String, $String] :: a;

-[Data[#category, #string]]: 
ParseToTerm[#category, #string] →  $[ParseText, #category, #string]; // TODO: line information.


/*
 * Serialize term as string
 */
∀ a.Show[a] :: $String;

-[Data[#term]]: Show[#term] → $[Show, #term];

)]