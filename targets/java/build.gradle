// Copyright (c) 2015-2016 IBM Corporation.
/*
 *  CRSX Java target build file.
 */
import org.transscript.gradle.*

defaultTasks 'dist'


// --- Generate Java parsers based on Antlr specifications

apply plugin:'org.transscript.gradle'

def transScriptSrc = '../../src'

repositories {
	flatDir { dirs 'dist' } // where to find crsx4 jars
	flatDir { dirs 'lib' }  // where to find crsx3.jar
	mavenCentral() // Where to find ANTLR
}

dependencies {
	transscript  project.hasProperty('dev') ? 'org.transscript:transscript:1.0.0-SNAPSHOT@jar' : 'org.transscript:transscript:1.0.0-ALPHA@jar'
	transscript 'org.crsx:crsx3@jar'
	transscript 'org.antlr:antlr4:4.5'
}

// -- Generate the Tosca compiler from .tsc source code.
// -- Uses stable Tosca compiler, overriding builtin parsers. 

task compileTosca(type: TransScriptTask, dependsOn:':targets:java:parsers:compileJava') { //, dependsOn:':targets:java:parsers:compileJava'
	description = "Compile Tosca to Java source files."
	sources     = fileTree(dir: transScriptSrc, include: ['*.crs4', '*.tsc', 'core/*.crs4', 'parser/*.crs4', 'text/*.crs4', 'std/*.crs4', 'std/**/*.tsc', 'cg/**/*.crs4', 'infer/*'])
	outputDir   = project.hasProperty('dev') ? file('compilerdev') : file('compiler')
	packageName = 'org.transscript.compiler'
	usecompiler = !project.hasProperty('crsx3')
	bootparserpath =  "file:parsers/build/classes/main/" // override TransScript parsers location. MUST END WITH /
}


// --- Java compilation and packaging

apply plugin:'java'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

	dependsOn 'compileTosca'
	if (project.nparsers) dependsOn ':targets:java:nparsers:buildNewParsers'
}

//clean.dependsOn cleanBuildTransScriptParsers
//clean.dependsOn cleanBuildAntlrParsers

group = 'org.transscript'
version = '1.0.0-SNAPSHOT'

sourceSets {
    main {
        java {
            srcDir 'runtime'
            srcDir project.hasProperty('dev') ? 'compilerdev' : 'compiler'
			srcDir project.nparsers ? 'nparsers/src' : 'parsers/src'
        }

		// Include TransScript source code for interpreter mode. Temporary.
		resources {
			srcDir '../../src'
			include '**/*.crs'
		}
    }
}

dependencies {
    compile 'org.crsx:crsx3@jar'
	compile 'org.antlr:antlr4:4.5'
}

jar {
	baseName 'transscript'
	manifest {
		attributes("Main-Class" : "org.transscript.Tool", "Class-Path" : "lib/crsx3.jar lib/antlr-runtime-4.5.jar")
	}
}

// ---- Snapshot Distribution jar

task snapshot(type: Copy, dependsOn: jar) {
	description "Generate Tosca main jar."
	from jar
	into project.file('dist')
}

task cleanSnapshot(overwrite:true) {}
