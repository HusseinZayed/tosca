// Copyright (c) 2015-2016 IBM Corporation.
/*
 *  CRSX Java target build file.
 */
import org.transscript.gradle.*

defaultTasks 'dist'


// --- Generate Java parsers based on Antlr specifications

apply plugin:'org.transscript.gradle'

def transScriptSrc = '../../src'


repositories {
	flatDir { dirs 'dist' } // where to find crsx4 jars
	flatDir { dirs 'lib' }  // where to find crsx3.jar
	mavenCentral() // Where to find ANTLR
}

dependencies {
	transscript  project.hasProperty('dev') ? files(transScriptSrc, "build") : 'org.transscript:transscript:1.0.0-ALPHA@jar'
	transscript 'org.crsx:crsx3@jar'
	transscript 'org.antlr:antlr4:4.5'
}

// -- Generate the TransScript compiler from .tsc source code.
// -- Uses stable TransScript compiler, overriding builtin parsers. 

task compileTransScript(type: TransScriptTask, dependsOn:':targets:java:parsers:buildParsers') {
	description = "Compile TransScript to Java source files."
	//sources     = fileTree(dir: transScriptSrc, include: ['/*.crs4', 'core/*.crs4', 'parser/*.crs4', 'text/*.crs4', 'std/*.crs4', 'cg/*.crs4', 'cg/*.tsc', 'utils/*.crs4', '*.crs4', 'test/*.crs4', 'unification/*.crs4', 'specify/*.crs4'])
	sources     = fileTree(dir: transScriptSrc, include: ['/*.crs4', 'core/*.crs4', 'parser/*.crs4', 'text/*.crs4', 'std/*.crs4', 'cg/*.crs4', 'cg/*.tsc', '*.crs4', 'test/*.crs4'])
	outputDir   = project.hasProperty('crsx3') ? file('compiler/org/transscript/compiler') : file('compiler')
	packageName = 'org.transscript.compiler'
	usecompiler = !project.hasProperty('crsx3')
	bootparserpath = "file:parsers/build/" // override TransScript parsers location.
}

// --- Java compilation and packaging

apply plugin:'java'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

	dependsOn 'compileTransScript'
}

//clean.dependsOn cleanBuildTransScriptParsers
//clean.dependsOn cleanBuildAntlrParsers

group = 'org.transscript'
version = '1.0.0-SNAPSHOT'

sourceSets {
    main {
        java {
            srcDir 'runtime'
            srcDir 'compiler'
			srcDir 'parsers/src'
        }

		// Include TransScript source code for interpreter mode. Temporary.
		//resources {
		//	srcDir '../../src'
		//	include '**/*.crs'
		//}
    }
}

dependencies {
    compile 'org.crsx:crsx3@jar'
	compile 'org.antlr:antlr4:4.5'
}

jar {
	baseName 'transscript'
	manifest {
		attributes("Main-Class" : "org.transscript.Tool", "Class-Path" : "../lib/crsx3.jar ../lib/antlr-runtime-4.5.jar")
	}
}

// ---- Snapshot Distribution jar

task snapshot(type: Copy, dependsOn: jar) {
	description "Generate distribution jar."
	from jar
	into project.file('dist')
}

task cleanDist(overwrite:true) {}
