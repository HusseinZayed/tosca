Introduction************CRS stands for Combinatory Reduction Systems, which is a powerful rewriting formalism invented by  `Peter Aczel <http://en.wikipedia.org/wiki/Peter_Aczel>`_and `Jan Willem Klop <http://en.wikipedia.org/wiki/Jan_Willem_Klop>`_.The idea of CRS is to allow rewrite rules that support matching of variable binding constructs and substitution aspart of rewrite steps, collectively known as higher-order rewriting.CRSX implements CRS with a number of extension borrowed from functional programming and semantics,to facilitate using CRS for writing compilers and similar “real world” transformation systems.The current version, described in this manual is CRSX 4, written in CRSX itself with run-time support for Java and C.